source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 1/lab1_kknn1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 1/lab1_kknn2.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 1/lab1_kknn3.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 1/lab1_kmeans1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 1/lab1_nyt.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_ctree1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_ctree1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_ctree2.R", echo=TRUE)
# Conditional Inference Tree for Mileage
fit2M <- ctree(Mileage~Price + Country + Reliability + Type, data=na.omit(cu.summary))
summary(fit2M)
# plot tree
plot(fit2M, uniform=TRUE, main="CI Tree Tree for Mileage ")
text(fit2M, use.n=TRUE, all=TRUE, cex=.8)
?text
# plot tree
plot(fit2M, uniform=TRUE, main="CI Tree Tree for Mileage ")
text(fit2M, use.n=TRUE, all=TRUE, cex=.8)
fit2M
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_ctree3.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_ctree3.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_kknn1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_randomforest1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart1.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart2.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart2.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart3.R", echo=TRUE)
require("mlbench")
install.packages("mlbench")
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart3.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart4.R", echo=TRUE)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart4.R", echo=TRUE)
data(Titanic)
source("~/GitHub/DataAnalyticsSpring2024_HazelDellario/Lab 3/code snippets lab 3/lab3_rpart3.R", echo=TRUE)
titanic_rpart = rpart(Survived ~ .)
source("~/.active-rstudio-document", echo=TRUE)
rpart
print(titanic_rpart)
plot(titanic_rpart)
text(titanic_rpart)
text(titanic_rpart)
titanic_rpart
printcp(titanic_rpart) # display the results
plotcp(titanic_rpart)
summary(titanic_rpart)
par(mfrow=c(1,2))
rsq.rpart(fitM) # visualize cross-validation results
rsq.rpart(titanic_rpart) # visualize cross-validation results
# plot tree
plot(titanic_rpart, uniform=TRUE, main="Regression Tree for Survival Rate")
text(titanic_rpart, use.n=TRUE, all=TRUE, cex=.8)
# prune the tree
ptitanic_rpart<- prune(titanic_rpart, cp=0.01160389) # from cptable??? adjust this to see the effect
# prune the tree
ptitanic_rpart<- prune(titanic_rpart, cp=0.01160389) # from cptable??? adjust this to see the effect
# plot the pruned tree
plot(ptitanic_rpart, uniform=TRUE, main="Pruned Regression Tree for Mileage")
text(ptitanic_rpart, use.n=TRUE, all=TRUE, cex=.8)
post(ptitanic_rpart, file = "ptree2.ps", title = "Pruned Regression Tree for Mileage")
index <- 1:nrow(Titanic)
testindex <- sample(index, trunc(length(index)/3))
testset <- Titanic[testindex,]
index <- 1:nrow(Titanic)
testindex <- sample(index, trunc(length(index)/3))
index
testindex
trunc(length(index)/3)
index <- 1:nrow(Glass)
library(e1071)
library(rpart)
library(mlbench)
data(Glass, package="mlbench")
index <- 1:nrow(Glass)
index
nrow(Glass)
nrow(Titanic)
View(titanic_rpart)
Titanic
plot(titanic_rpart,compress=TRUE)
text(titanic_rpart, use.n=TRUE)
titanic_tree = ctree(Species ~ ., data = Titanic)
titanic_tree = ctree(Suvival ~ ., data = Titanic)
titanic_tree = ctree(Survival ~ ., data = Titanic)
titanic_tree = ctree(Survived ~ ., data = Titanic)
plot(titanic_tree)
cforest(Survived ~ ., data = Titanic, controls=cforest_control(mtry=2, mincriterion=0))
library(tree)
tree_pkg <- tree(Survived ~ ., data = Titanic)
tree_pkg
tree_pkg$frame
plot(tree_pkg)
text(tree_pkg)
titanic_tree = ctree(Survived ~ ., data = Titanic)
plot(titanic_tree)
require(rpart)
swiss_rpart <- rpart(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_rpart) # try some different plot options
text(swiss_rpart) # try some different text options
require(party)
treeSwiss<-ctree(Species ~ ., data=iris)
plot(treeSwiss)
cforest(Species ~ ., data=iris, controls=cforest_control(mtry=2, mincriterion=0))
View(Titanic)
library("party")
treeSwiss<-ctree(Species ~ ., data=iris)
plot(treeSwiss)
party.tree <-ctree(Survived ~ ., data = Titanic)
plot(party.tree)
?dist
titanic.dist = stats::dist(Titanic)
titanic.hclust = hclust(titanic.dist)
plot(titanic.hclust)
dev.off()
plot(titanic.hclust)
summary(titanic.hclust)
str(Titanic)
?mapply
# all column values are strings when they should be FACTORS
titanic.as.factor= mapply(FUN = as.factor, Titanic)
View(titanic.as.factor)
# all column values are strings when they should be FACTORS
titanic.as.factor= mapply(FUN = lapply(FUN = as.factor, Titanic), Titanic)
?lapply
# all column values are strings when they should be FACTORS
titanic.as.factor= mapply(FUN = lapply(Titanic, FUN = as.factor), Titanic)
?mapply
# all column values are strings when they should be FACTORS
titanic.as.factor= mapply(FUN = lapply, Titanic, MoreArgs = c(Titanic, FUN = as.factor))
str(Titanic)
# all column values are strings when they should be FACTORS
class.factor = as.factor(Titanic$Class)
Titanic$Class
data.frame(Titanic)
Titanic = data.frame(Titanic)
Titanic
class.factor = as.factor(Titanic$Class)
Titanic = data.frame(Titanic)
Titanic$Class = as.factor(Titanic$Class)
Titanic$Sex = as.factor(Titanic$Sex)
Titanic$Age = as.double(Titanic$Age)
Titanic$Survived = as.factor(Titanic$Survived)
Titanic$Freq = as.double(Titanic$Freq)
# rpart ----------------------------------------------------------------------------------
titanic_rpart = rpart(Survived ~ ., data = Titanic)
plot(titanic_rpart)
text(titanic_rpart)
printcp(titanic_rpart) # display the results
# rpart ----------------------------------------------------------------------------------
titanic_rpart = rpart(Survived ~ ., data = Titanic)
plot(titanic_rpart)
text(titanic_rpart)
printcp(titanic_rpart) # display the results
plotcp(titanic_rpart)
summary(titanic_rpart)
par(mfrow=c(1,2))
rsq.rpart(titanic_rpart) # visualize cross-validation results
# plot tree
plot(titanic_rpart, uniform=TRUE, main="Regression Tree for Survival Rate")
text(titanic_rpart, use.n=TRUE, all=TRUE, cex=.8)
# prune the tree
ptitanic_rpart<- prune(titanic_rpart, cp=0.01160389) # from cptable??? adjust this to see the effect
# plot the pruned tree
plot(ptitanic_rpart, uniform=TRUE, main="Pruned Regression Tree for Mileage")
text(ptitanic_rpart, use.n=TRUE, all=TRUE, cex=.8)
post(ptitanic_rpart, file = "ptree2.ps", title = "Pruned Regression Tree for Mileage")
plot(titanic_rpart,compress=TRUE)
text(titanic_rpart, use.n=TRUE)
cforest(Survived ~ ., data = Titanic, controls=cforest_control(mtry=2, mincriterion=0))
library(tree)
tree_pkg <- tree(Survived ~ ., data = Titanic)
tree_pkg
tree_pkg$frame
plot(tree_pkg)
text(tree_pkg)
titanic.dist = stats::dist(Titanic)
View(titanic_rpart)
titanic.hclust = hclust(titanic.dist)
dev.off()
plot(titanic.hclust)
summary(titanic.hclust)
titanic.dendrogram = as.dendrogram(titanic.hclust)
plot(titanic.dendrogram)
text(titanic.dendrogram)
?as.phylo
library("ape")
install.packages("age")
install.packages("ape")
library("ape")
titanic.phylo = as.phylo(titanic.hclust)
plot(titanic.phylo, type = "cladogram")
plot(titanic.phylo, type = "unrooted")
plot(titanic.phylo, type = "fan")
plot(titanic.phylo, type = "radial")
plot(titanic.phylo)
plot(titanic.phylo, type = "cladogram")
plot(titanic.phylo, type = "unrooted")
plot(titanic.phylo, type = "fan")
plot(titanic.phylo, type = "radial")
